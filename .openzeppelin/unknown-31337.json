{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xeC827421505972a2AE9C320302d3573B42363C26",
      "txHash": "0xa204a63a77f572a4b87a2f3e43eb5ededfe293095fc3e4105ca24ea1c4484da4",
      "kind": "uups"
    },
    {
      "address": "0x3f9A1B67F3a3548e0ea5c9eaf43A402d12b6a273",
      "txHash": "0xc25b9097fcb8abb76d056cb1a85e83f80bb1398806ffe335d08bee2076b21ba4",
      "kind": "uups"
    },
    {
      "address": "0x742489F22807ebB4C36ca6cD95c3e1C044B7B6c8",
      "txHash": "0xbe1b45dfeecc6c5813966900dac342fca363fdf4f2516a88f38df56bfdbee308",
      "kind": "uups"
    },
    {
      "address": "0xA9e6Bfa2BF53dE88FEb19761D9b2eE2e821bF1Bf",
      "txHash": "0xdca07d760d4665d2d7dd117f8906696747c91dc070716059347c251f6678f5db",
      "kind": "uups"
    },
    {
      "address": "0x4000F8820522AC96C4221b299876e3e53bCc8525",
      "txHash": "0xf8822e2ec99d0802daf66656ef610e49de8554562e37f0ac2ab40768fb03e8a0",
      "kind": "uups"
    },
    {
      "address": "0x9338CA7d556248055f5751d85cDA7aD6eF254433",
      "txHash": "0x75d5dade04bfe5843887af94a367d3fb33136e348f355590e981ef848445854b",
      "kind": "uups"
    },
    {
      "address": "0x9849832a1d8274aaeDb1112ad9686413461e7101",
      "txHash": "0x39c3031f671dd44e99afa39d6d15cef5b5a645b34c71c18bb9401d16f49ab917",
      "kind": "uups"
    },
    {
      "address": "0xa4E00CB342B36eC9fDc4B50b3d527c3643D4C49e",
      "txHash": "0x09d8e67820564a540b9ad3a9ac92b5a12f9566a28340a0523541d10b45040d7d",
      "kind": "uups"
    },
    {
      "address": "0xBEe6FFc1E8627F51CcDF0b4399a1e1abc5165f15",
      "txHash": "0xba74020428bc533ba7a13a0055106b5d1af6c50ad2de29fdc0a3c949bd010346",
      "kind": "uups"
    },
    {
      "address": "0xC32609C91d6B6b51D48f2611308FEf121B02041f",
      "txHash": "0x3f3a7d9dbb29b2294ce3567a49ecd55698b435dd9575f052686afeb1c10838b9",
      "kind": "uups"
    },
    {
      "address": "0x2e8880cAdC08E9B438c6052F5ce3869FBd6cE513",
      "txHash": "0x11f3c4bc5abd2f84eb173490792a7244b48430ace5987359c3ad129f6e361f53",
      "kind": "uups"
    },
    {
      "address": "0xb007167714e2940013EC3bb551584130B7497E22",
      "txHash": "0xfa6d9ae0eefe2429d7f4f61cb5ed029e1a4b2069b0873374124bf6880b90d39b",
      "kind": "uups"
    },
    {
      "address": "0x618fB9dbd2BD6eb968B4c1af36af6CB0b45310Ec",
      "txHash": "0x9191f43a42f3fcfeebaa180598766d2a0adc329900ba8a09c7a3e31713118081",
      "kind": "uups"
    },
    {
      "address": "0xa779C1D17bC5230c07afdC51376CAC1cb3Dd5314",
      "txHash": "0x9b24112c98034202e8926be804d67547822c7b67ed947e5b86b95ff156875361",
      "kind": "uups"
    },
    {
      "address": "0x103A3b128991781EE2c8db0454cA99d67b257923",
      "txHash": "0x153b0d115fd6c608122890cc4ccb62de6e95a6776d5530b08765fd9d65569621",
      "kind": "uups"
    },
    {
      "address": "0xBbc18b580256A82dC0F9A86152b8B22E7C1C8005",
      "txHash": "0x53b663014ebeb55e2d9c704858fecba86233a82655b244f1aa4fe8de063de344",
      "kind": "uups"
    },
    {
      "address": "0xFC4EE541377F3b6641c23CBE82F6f04388290421",
      "txHash": "0xc5dfbc449766939eb8e9605c5e00053d89e9244f68ef1424e87e2ae82ef5534b",
      "kind": "uups"
    },
    {
      "address": "0x20d7B364E8Ed1F4260b5B90C41c2deC3C1F6D367",
      "txHash": "0x25249feba95bc8668568fa1f1abe8854f5d22238240168398e016c7150a7eba3",
      "kind": "uups"
    },
    {
      "address": "0x6A47346e722937B60Df7a1149168c0E76DD6520f",
      "txHash": "0x5020e6858ff4ce0bff286198bf6d3757c370be6574c2959f7077e765bad04467",
      "kind": "uups"
    },
    {
      "address": "0x7A28cf37763279F774916b85b5ef8b64AB421f79",
      "txHash": "0x05256c232cc0f1869986cd561d3e4e97418355ca4cd20ad7e779dd6ebaca0581",
      "kind": "uups"
    },
    {
      "address": "0xaB837301d12cDc4b97f1E910FC56C9179894d9cf",
      "txHash": "0x34c74600ecd233571a089522e70d301d6e29cafddc9069fecaa57fb0364b6b3f",
      "kind": "uups"
    },
    {
      "address": "0x4ff1f64683785E0460c24A4EF78D582C2488704f",
      "txHash": "0x7fd451d42cbb985dfda114ac3d1240da8b114342feb03299a7a53e8b1c1f8c73",
      "kind": "uups"
    },
    {
      "address": "0xd038A2EE73b64F30d65802Ad188F27921656f28F",
      "txHash": "0xab6f6d76cd1dbe7f80fcd757926a6184f7ab70c4b851abea56d5ff275fb7f35b",
      "kind": "uups"
    },
    {
      "address": "0x666432Ccb747B2220875cE185f487Ed53677faC9",
      "txHash": "0x76cc3a9daac7b2197c446a1f1eb317654303583b83f75180d7c25fc4faefaf61",
      "kind": "uups"
    },
    {
      "address": "0x15Ff10fCc8A1a50bFbE07847A22664801eA79E0f",
      "txHash": "0x70da9ccd87697883fbd98038ef4a862113deeeb183c2fc4033646d8adfb80ed7",
      "kind": "uups"
    },
    {
      "address": "0xAe9Ed85dE2670e3112590a2BB17b7283ddF44d9c",
      "txHash": "0xdfeb00c7c5d779e1a0124ff7287593c7ecd2b7ba015ece7400a8631ae714495e",
      "kind": "uups"
    },
    {
      "address": "0x8f119cd256a0FfFeed643E830ADCD9767a1d517F",
      "txHash": "0x80b8ea08f34b9ec21ab9bf43cdf12905a3c5f4846b9e78af6bacdaa9bec274c8",
      "kind": "uups"
    },
    {
      "address": "0x398E4948e373Db819606A459456176D31C3B1F91",
      "txHash": "0x7dd6ad8d098b3d8adbf45cae9442288690e91ecff04d9eb6ded89b3429c9f14c",
      "kind": "uups"
    },
    {
      "address": "0x25C0a2F0A077F537Bd11897F04946794c2f6f1Ef",
      "txHash": "0xd48ba2cc4b40cc0b78f3070b83008ef7c1ac3014341c07de21c85b9584564969",
      "kind": "uups"
    },
    {
      "address": "0x6b39b761b1b64C8C095BF0e3Bb0c6a74705b4788",
      "txHash": "0x8a6a92ecc4671b45ae180f9fcc5807b4328aa577eef6af2e18e4e573e8d1b6b0",
      "kind": "uups"
    },
    {
      "address": "0x74Df809b1dfC099E8cdBc98f6a8D1F5c2C3f66f8",
      "txHash": "0xe640f86664b03d0b0240765e63f628586fd682b045c6d6cdf81ddc402b17088f",
      "kind": "uups"
    },
    {
      "address": "0x2b639Cc84e1Ad3aA92D4Ee7d2755A6ABEf300D72",
      "txHash": "0x3537ff0e6bb074f657583e4da2910ad57f790784ce6c0edd75ed8d402091b62a",
      "kind": "uups"
    },
    {
      "address": "0xe14058B1c3def306e2cb37535647A04De03Db092",
      "txHash": "0xfce000ffc8b7a74990b09afa4a7b02bde7743310c20496d849118ddbec15642a",
      "kind": "uups"
    },
    {
      "address": "0x74ef2B06A1D2035C33244A4a263FF00B84504865",
      "txHash": "0x41119cce9f8c8259c4c99fa7d1dfd9ebc46d0057b75c0d958059bbe0e9bfb3f9",
      "kind": "uups"
    },
    {
      "address": "0x67baFF31318638F497f4c4894Cd73918563942c8",
      "txHash": "0xfb065fcfdd3a2dee0af324174f121fcd2b5552e3a85d5cc6b1df05af3bf89de4",
      "kind": "uups"
    },
    {
      "address": "0x73C68f1f41e4890D06Ba3e71b9E9DfA555f1fb46",
      "txHash": "0x1dea1c9c53a0f1b72232e528d4ad494abd483359988aa97bb431b3c0e4c43366",
      "kind": "uups"
    },
    {
      "address": "0xD2D5e508C82EFc205cAFA4Ad969a4395Babce026",
      "txHash": "0xbd51767cd9a5a99a340d5580bbaa258f3af6fe2b422b4b90c4c1f59d660e2672",
      "kind": "uups"
    },
    {
      "address": "0xF85895D097B2C25946BB95C4d11E2F3c035F8f0C",
      "txHash": "0x48391f7fd16a056b5bcc47ff38c943170fea2bfd182fa09eec0222555525d289",
      "kind": "uups"
    }
  ],
  "impls": {
    "d1e574a503fa4bdd43859d43fb87f1212c476359f819a1238a5c0c20fc28367f": {
      "address": "0xb007167714e2940013EC3bb551584130B7497E22",
      "txHash": "0x695c214341f52ec450c42c7c4c0bbb9c918c706abd09a8eadce11e1a84c357a9",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "305",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20Upgradeable)2160",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC4626Upgradeable.sol:34"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC4626Upgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC4626Upgradeable.sol:295"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "401",
            "type": "t_address",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:43"
          },
          {
            "label": "upgradeStatus",
            "offset": 20,
            "slot": "401",
            "type": "t_bool",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:44"
          },
          {
            "label": "rewardsPerShareAccumulated",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:45"
          },
          {
            "label": "userRewardPaid",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:46"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:47"
          },
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "405",
            "type": "t_contract(IERC20MetadataUpgradeable)2891",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:48"
          },
          {
            "label": "alluoPool",
            "offset": 0,
            "slot": "406",
            "type": "t_address",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:49"
          },
          {
            "label": "poolId",
            "offset": 0,
            "slot": "407",
            "type": "t_uint256",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:50"
          },
          {
            "label": "yieldTokens",
            "offset": 0,
            "slot": "408",
            "type": "t_struct(AddressSet)5016_storage",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:51"
          },
          {
            "label": "poolTokens",
            "offset": 0,
            "slot": "410",
            "type": "t_struct(AddressSet)5016_storage",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:52"
          },
          {
            "label": "curvePool",
            "offset": 0,
            "slot": "412",
            "type": "t_address",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:54"
          },
          {
            "label": "adminFee",
            "offset": 0,
            "slot": "413",
            "type": "t_uint256",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:55"
          },
          {
            "label": "gnosis",
            "offset": 0,
            "slot": "414",
            "type": "t_address",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:56"
          },
          {
            "label": "vaultRewardsBefore",
            "offset": 0,
            "slot": "415",
            "type": "t_uint256",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)2891": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)2160": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)5016_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4701_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4701_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ff93050332e00ccc7a06ec73ed68f4373910596aaefe0614a066c79dbbb545e6": {
      "address": "0xeC827421505972a2AE9C320302d3573B42363C26",
      "txHash": "0x15325bd950a1101ac273ec34424d6a736ecc3deee8f82096ace33d16403cbaf7",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:32"
          },
          {
            "label": "totalBalances",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:33"
          },
          {
            "label": "upgradeStatus",
            "offset": 0,
            "slot": "303",
            "type": "t_bool",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:38"
          },
          {
            "label": "rewardToken",
            "offset": 1,
            "slot": "303",
            "type": "t_contract(IERC20MetadataUpgradeable)2891",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:40"
          },
          {
            "label": "entryToken",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(IERC20MetadataUpgradeable)2891",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:41"
          },
          {
            "label": "yieldTokens",
            "offset": 0,
            "slot": "305",
            "type": "t_struct(AddressSet)5016_storage",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:42"
          },
          {
            "label": "vaults",
            "offset": 0,
            "slot": "307",
            "type": "t_struct(AddressSet)5016_storage",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:43"
          },
          {
            "label": "curvePool",
            "offset": 0,
            "slot": "309",
            "type": "t_address",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:45"
          },
          {
            "label": "poolId",
            "offset": 0,
            "slot": "310",
            "type": "t_uint256",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)2891": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)5016_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4701_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4701_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3e4b4d0f4c1b605033140058c0206adc75e3e01b3b80a67800c14d6c5c5458cb": {
      "address": "0x01cf58e264d7578D4C67022c58A24CbC4C4a304E",
      "txHash": "0x1fb967258fc3d703c11ef1f6020c6b05d83940dd01878837587b2c5c91abb287",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC20Upgradeable)1960",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC4626Upgradeable.sol:34"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "301",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC4626Upgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC4626Upgradeable.sol:295"
          },
          {
            "label": "rewardsPerShareAccumulated",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:34"
          },
          {
            "label": "adminFee",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:35"
          },
          {
            "label": "vaultRewardsBefore",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:36"
          },
          {
            "label": "duration",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:37"
          },
          {
            "label": "totalRequestedWithdrawals",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:38"
          },
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IERC20MetadataUpgradeable)2691",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:40"
          },
          {
            "label": "yieldTokens",
            "offset": 0,
            "slot": "357",
            "type": "t_struct(AddressSet)4816_storage",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:41"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:45"
          },
          {
            "label": "alluoPool",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:46"
          },
          {
            "label": "fraxPool",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:47"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "362",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:48"
          },
          {
            "label": "gnosis",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:49"
          },
          {
            "label": "userRewardPaid",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:51"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:52"
          },
          {
            "label": "userWithdrawals",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(Shareholder)5262_storage)",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:53"
          },
          {
            "label": "withdrawalqueue",
            "offset": 0,
            "slot": "367",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:55"
          },
          {
            "label": "upgradeStatus",
            "offset": 0,
            "slot": "368",
            "type": "t_bool",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)2691": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1960": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Shareholder)5262_storage)": {
            "label": "mapping(address => struct AlluoLockedVault.Shareholder)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4816_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4501_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4501_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Shareholder)5262_storage": {
            "label": "struct AlluoLockedVault.Shareholder",
            "members": [
              {
                "label": "withdrawalRequested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawalAvailable",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "200,240,13,230,23,180,250,3,186,2,118,82,88,244,31,255,57,85,201,146,26,124,219,50,33,210,32,165,140,195,239,194": {
      "address": "0xD2D5e508C82EFc205cAFA4Ad969a4395Babce026",
      "txHash": "0xc09fc6f233dc589f1ae312d9414cde56b907433e89f1a822095950e3a57721f7",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "alluoPool",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "AlluoRewardsDistributor",
            "src": "contracts/AlluoRewardsDistributor.sol:33"
          },
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "AlluoRewardsDistributor",
            "src": "contracts/AlluoRewardsDistributor.sol:34"
          },
          {
            "label": "vaults",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(AddressSet)2574_storage",
            "contract": "AlluoRewardsDistributor",
            "src": "contracts/AlluoRewardsDistributor.sol:35"
          },
          {
            "label": "upgradeStatus",
            "offset": 0,
            "slot": "255",
            "type": "t_bool",
            "contract": "AlluoRewardsDistributor",
            "src": "contracts/AlluoRewardsDistributor.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2574_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2273_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2273_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "108,194,86,79,1,177,152,195,234,212,132,168,244,129,204,232,113,220,179,133,181,187,112,175,251,124,195,73,16,205,88,216": {
      "address": "0x8f119cd256a0FfFeed643E830ADCD9767a1d517F",
      "txHash": "0x36418e92f6b3eba5a4a9bea7f7bd6c232436d78704c4363b643ac88c71b8846a",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "305",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20MetadataUpgradeable)2694",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:233"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "401",
            "type": "t_address",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts/AlluoVaultUpgradeable.sol:104"
          },
          {
            "label": "upgradeStatus",
            "offset": 20,
            "slot": "401",
            "type": "t_bool",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts/AlluoVaultUpgradeable.sol:105"
          },
          {
            "label": "rewardsPerShareAccumulated",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts/AlluoVaultUpgradeable.sol:106"
          },
          {
            "label": "userRewardPaid",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts/AlluoVaultUpgradeable.sol:107"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts/AlluoVaultUpgradeable.sol:108"
          },
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "405",
            "type": "t_contract(IERC20MetadataUpgradeable)2694",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts/AlluoVaultUpgradeable.sol:109"
          },
          {
            "label": "alluoPool",
            "offset": 0,
            "slot": "406",
            "type": "t_address",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts/AlluoVaultUpgradeable.sol:110"
          },
          {
            "label": "poolId",
            "offset": 0,
            "slot": "407",
            "type": "t_uint256",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts/AlluoVaultUpgradeable.sol:111"
          },
          {
            "label": "yieldTokens",
            "offset": 0,
            "slot": "408",
            "type": "t_struct(AddressSet)4454_storage",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts/AlluoVaultUpgradeable.sol:112"
          },
          {
            "label": "poolTokens",
            "offset": 0,
            "slot": "410",
            "type": "t_struct(AddressSet)4454_storage",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts/AlluoVaultUpgradeable.sol:113"
          },
          {
            "label": "curvePool",
            "offset": 0,
            "slot": "412",
            "type": "t_address",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts/AlluoVaultUpgradeable.sol:115"
          },
          {
            "label": "adminFee",
            "offset": 0,
            "slot": "413",
            "type": "t_uint256",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts/AlluoVaultUpgradeable.sol:116"
          },
          {
            "label": "gnosis",
            "offset": 0,
            "slot": "414",
            "type": "t_address",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts/AlluoVaultUpgradeable.sol:117"
          },
          {
            "label": "vaultRewardsBefore",
            "offset": 0,
            "slot": "415",
            "type": "t_uint256",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts/AlluoVaultUpgradeable.sol:119"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)2694": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4454_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4153_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4153_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "157,62,240,245,107,3,204,250,42,241,119,109,11,74,102,16,56,58,7,58,151,97,200,183,53,25,108,138,56,192,29,183": {
      "address": "0xF5b81Fe0B6F378f9E6A3fb6A6cD1921FCeA11799",
      "txHash": "0x28567b3e1c31ff800ea74306589150e67f5c3923f231e5a07223b80ef4c86633",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC20MetadataUpgradeable)2694",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:233"
          },
          {
            "label": "rewardsPerShareAccumulated",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:90"
          },
          {
            "label": "adminFee",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:91"
          },
          {
            "label": "vaultRewardsBefore",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:92"
          },
          {
            "label": "duration",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:93"
          },
          {
            "label": "totalRequestedWithdrawals",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:94"
          },
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IERC20MetadataUpgradeable)2694",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:96"
          },
          {
            "label": "yieldTokens",
            "offset": 0,
            "slot": "357",
            "type": "t_struct(AddressSet)4454_storage",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:97"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:101"
          },
          {
            "label": "alluoPool",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:102"
          },
          {
            "label": "fraxPool",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:103"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "362",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:104"
          },
          {
            "label": "gnosis",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:105"
          },
          {
            "label": "userRewardPaid",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:107"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:108"
          },
          {
            "label": "userWithdrawals",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(Shareholder)6563_storage)",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:109"
          },
          {
            "label": "withdrawalqueue",
            "offset": 0,
            "slot": "367",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:111"
          },
          {
            "label": "upgradeStatus",
            "offset": 0,
            "slot": "368",
            "type": "t_bool",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:125"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)2694": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Shareholder)6563_storage)": {
            "label": "mapping(address => struct AlluoLockedVault.Shareholder)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4454_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4153_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4153_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Shareholder)6563_storage": {
            "label": "struct AlluoLockedVault.Shareholder",
            "members": [
              {
                "label": "withdrawalRequested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawalAvailable",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "163,70,37,166,144,39,176,8,162,71,68,57,21,125,202,167,22,169,119,104,179,153,180,117,217,53,199,51,159,198,121,83": {
      "address": "0x6533158b042775e2FdFeF3cA1a782EFDbB8EB9b1",
      "txHash": "0xbeb2244c7eaa55a89ad98ef91508858216510d1ea9e5df54c872e2c11da14c31",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoVaultPool",
            "src": "contracts/AlluoVaultPool.sol:89"
          },
          {
            "label": "totalBalances",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "AlluoVaultPool",
            "src": "contracts/AlluoVaultPool.sol:90"
          },
          {
            "label": "upgradeStatus",
            "offset": 0,
            "slot": "303",
            "type": "t_bool",
            "contract": "AlluoVaultPool",
            "src": "contracts/AlluoVaultPool.sol:97"
          },
          {
            "label": "rewardToken",
            "offset": 1,
            "slot": "303",
            "type": "t_contract(IERC20MetadataUpgradeable)2694",
            "contract": "AlluoVaultPool",
            "src": "contracts/AlluoVaultPool.sol:99"
          },
          {
            "label": "entryToken",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(IERC20MetadataUpgradeable)2694",
            "contract": "AlluoVaultPool",
            "src": "contracts/AlluoVaultPool.sol:100"
          },
          {
            "label": "yieldTokens",
            "offset": 0,
            "slot": "305",
            "type": "t_struct(AddressSet)4454_storage",
            "contract": "AlluoVaultPool",
            "src": "contracts/AlluoVaultPool.sol:101"
          },
          {
            "label": "vaults",
            "offset": 0,
            "slot": "307",
            "type": "t_struct(AddressSet)4454_storage",
            "contract": "AlluoVaultPool",
            "src": "contracts/AlluoVaultPool.sol:102"
          },
          {
            "label": "curvePool",
            "offset": 0,
            "slot": "309",
            "type": "t_address",
            "contract": "AlluoVaultPool",
            "src": "contracts/AlluoVaultPool.sol:104"
          },
          {
            "label": "poolId",
            "offset": 0,
            "slot": "310",
            "type": "t_uint256",
            "contract": "AlluoVaultPool",
            "src": "contracts/AlluoVaultPool.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)2694": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4454_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4153_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4153_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "110,248,196,103,187,200,152,189,36,210,238,177,203,246,248,93,220,39,147,156,248,113,174,223,89,81,75,38,250,139,6,115": {
      "address": "0x2b639Cc84e1Ad3aA92D4Ee7d2755A6ABEf300D72",
      "txHash": "0x2c811576ecf5b4ac780324c8eca17e3409543b2c91dc2d8f36c7e5f83dc3a54d",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "AlluoRewardsDistributor",
            "src": "contracts/AlluoRewardsDistributor.sol:65"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(AddressSet)2574_storage",
            "contract": "AlluoRewardsDistributor",
            "src": "contracts/AlluoRewardsDistributor.sol:66"
          },
          {
            "label": "poolToVaults",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_struct(AddressSet)2574_storage)",
            "contract": "AlluoRewardsDistributor",
            "src": "contracts/AlluoRewardsDistributor.sol:67"
          },
          {
            "label": "upgradeStatus",
            "offset": 0,
            "slot": "255",
            "type": "t_bool",
            "contract": "AlluoRewardsDistributor",
            "src": "contracts/AlluoRewardsDistributor.sol:70"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressSet)2574_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2574_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2273_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2273_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
