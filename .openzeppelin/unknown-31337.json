{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x74ef2B06A1D2035C33244A4a263FF00B84504865",
      "txHash": "0x1f5c16c5afa09ac6fcbc5626db010455cd2705c43d06548ad7577a94703fcce0",
      "kind": "uups"
    },
    {
      "address": "0x67baFF31318638F497f4c4894Cd73918563942c8",
      "txHash": "0xdad89945a16613e7c21fbb5d20a8fdc33d5df01cd65d85948613ebc47fefc045",
      "kind": "uups"
    },
    {
      "address": "0x73C68f1f41e4890D06Ba3e71b9E9DfA555f1fb46",
      "txHash": "0x5a12b3935f18ee1eb23e1e13538eaa921a26b2e09266d5fc23632bf9c922fcc1",
      "kind": "uups"
    },
    {
      "address": "0xD2D5e508C82EFc205cAFA4Ad969a4395Babce026",
      "txHash": "0xb946ae3d9c3b3d88041f5a945301961d9ae430948161c6e0d86a791d4cd33ad3",
      "kind": "uups"
    },
    {
      "address": "0xeC827421505972a2AE9C320302d3573B42363C26",
      "txHash": "0x84117543f2fe8ca6ea2aa149df55e0fdedcbfe9ea762358f7e65284105d4104a",
      "kind": "uups"
    },
    {
      "address": "0x3f9A1B67F3a3548e0ea5c9eaf43A402d12b6a273",
      "txHash": "0x6bcbdf546cdbd632be96e39376c9b90a4f0e53e37e4b83eb95677fe71a443492",
      "kind": "uups"
    },
    {
      "address": "0x742489F22807ebB4C36ca6cD95c3e1C044B7B6c8",
      "txHash": "0xfe84674d90a201356b926710544a5d1c0c5b9343bf1591191c970c0e22f55939",
      "kind": "uups"
    },
    {
      "address": "0xA9e6Bfa2BF53dE88FEb19761D9b2eE2e821bF1Bf",
      "txHash": "0xea31cda914bb207bbd17651eef890f9e0ef8cbcd756e44de0a09f1ad09126a60",
      "kind": "uups"
    },
    {
      "address": "0x4000F8820522AC96C4221b299876e3e53bCc8525",
      "txHash": "0x1aeec2e8ddc2f875b0231af8dba1ef05b4f42a4fe1f3c69b42f4b925a40a7681",
      "kind": "uups"
    },
    {
      "address": "0x9338CA7d556248055f5751d85cDA7aD6eF254433",
      "txHash": "0x9ca3fca9d1a11d07148dc3c3255dbc52b1dc31737d0180865e9bc1f77956141f",
      "kind": "uups"
    },
    {
      "address": "0x9849832a1d8274aaeDb1112ad9686413461e7101",
      "txHash": "0x6af58c7cfe289e2e8824fc2d7607d507eea90cb112137f0ca9ea55ea7b057cf7",
      "kind": "uups"
    },
    {
      "address": "0xa4E00CB342B36eC9fDc4B50b3d527c3643D4C49e",
      "txHash": "0xf27927826fc17754c1a56c9bee4c39b91f7d099844d5a2d3d2b0b32c81c5aaf2",
      "kind": "uups"
    },
    {
      "address": "0xBEe6FFc1E8627F51CcDF0b4399a1e1abc5165f15",
      "txHash": "0x242e6398493a324e1a1a8de83fe6d11b5184740936fae28e0df6c1bf68ebcc91",
      "kind": "uups"
    },
    {
      "address": "0xC32609C91d6B6b51D48f2611308FEf121B02041f",
      "txHash": "0xdfd894fa2801437df8e61f57dcef7c6e13f7d685c5d62f5f0364a32710b1bf55",
      "kind": "uups"
    },
    {
      "address": "0x2e8880cAdC08E9B438c6052F5ce3869FBd6cE513",
      "txHash": "0x79b31fcb2f24dc86ceb027aa383e9d8d5a200cd89b334dbbeaa2dc3e3a9ad3dc",
      "kind": "uups"
    },
    {
      "address": "0xb007167714e2940013EC3bb551584130B7497E22",
      "txHash": "0xd354a8a44613212deef2d3bea968d2f6349924d3aab24002d3791c43d1036ada",
      "kind": "uups"
    },
    {
      "address": "0x618fB9dbd2BD6eb968B4c1af36af6CB0b45310Ec",
      "txHash": "0xee19d58c461bab4b0ce32a9cf1a9da700dd1b19ad31559ec33f1bda0e4382f39",
      "kind": "uups"
    },
    {
      "address": "0xa779C1D17bC5230c07afdC51376CAC1cb3Dd5314",
      "txHash": "0xb0cf2b01189307ea653d7f6295d3ed341035e0321b5031f754c915b4ff38121a",
      "kind": "uups"
    },
    {
      "address": "0x103A3b128991781EE2c8db0454cA99d67b257923",
      "txHash": "0x76af5c260af29331d2b9c859fec828b88b8fab17ed7fefcf400fef47bec6a9a1",
      "kind": "uups"
    },
    {
      "address": "0xBbc18b580256A82dC0F9A86152b8B22E7C1C8005",
      "txHash": "0xc02c7c51bbd6356c55bd087c995ec7297f6df5a73d0a8f198ec204c55ba661de",
      "kind": "uups"
    },
    {
      "address": "0xFC4EE541377F3b6641c23CBE82F6f04388290421",
      "txHash": "0x9c7cc113de766c7000d83336b919a8aec66c665846cd9b4564fd438ccc80a067",
      "kind": "uups"
    },
    {
      "address": "0x20d7B364E8Ed1F4260b5B90C41c2deC3C1F6D367",
      "txHash": "0xcc831e03743e3b1193b8f055eb5c960441c13e00ed72f0d284dc23cbd7229f0e",
      "kind": "uups"
    },
    {
      "address": "0x6A47346e722937B60Df7a1149168c0E76DD6520f",
      "txHash": "0x14ae5d1881bdcc6921d098b005ecc71416d358e0b62a20ce172a8e179bd6f8c7",
      "kind": "uups"
    },
    {
      "address": "0x7A28cf37763279F774916b85b5ef8b64AB421f79",
      "txHash": "0xa5c8455784cc99248050e921ca47bb5ef850077d27a64e907c1e26870adc5b62",
      "kind": "uups"
    },
    {
      "address": "0xaB837301d12cDc4b97f1E910FC56C9179894d9cf",
      "txHash": "0x44b9df6b976df6adaa60b6d9b19f7d2941e2ccc2c17ef57a2fcda7ef8ccc5fce",
      "kind": "uups"
    },
    {
      "address": "0x4ff1f64683785E0460c24A4EF78D582C2488704f",
      "txHash": "0x226b8855d146fe93f77b7013dd6d46f2d40aca44a57c62169d93234944f2dc99",
      "kind": "uups"
    },
    {
      "address": "0xd038A2EE73b64F30d65802Ad188F27921656f28F",
      "txHash": "0xf6413fdce7c407bfa4b19778cdf148c622102114d3460f57d6ca364946f41b1e",
      "kind": "uups"
    },
    {
      "address": "0x666432Ccb747B2220875cE185f487Ed53677faC9",
      "txHash": "0x5caf854898db81c6661e0cb94ff2d7812d4f7fb41d57ee0fc3855cec6a3475cc",
      "kind": "uups"
    },
    {
      "address": "0x15Ff10fCc8A1a50bFbE07847A22664801eA79E0f",
      "txHash": "0x93ed4c4b382e15216b872bff2641f8d9b801d2694d4f15f9ca38783c5a5a1a91",
      "kind": "uups"
    },
    {
      "address": "0xAe9Ed85dE2670e3112590a2BB17b7283ddF44d9c",
      "txHash": "0xf23c5c0364876cf1dc24e8ec9864e12150e433d0494d00d69a6f1396b691c621",
      "kind": "uups"
    },
    {
      "address": "0x8f119cd256a0FfFeed643E830ADCD9767a1d517F",
      "txHash": "0x6b3a57feef66331c660a83966ea20dbe630723fce7e53da2bb750001462c4610",
      "kind": "uups"
    },
    {
      "address": "0xe14058B1c3def306e2cb37535647A04De03Db092",
      "txHash": "0xca80a8645f41f1cab2820beaa66226cc5754ac290c3aaa8b753ee9e7a764f813",
      "kind": "uups"
    },
    {
      "address": "0x2b639Cc84e1Ad3aA92D4Ee7d2755A6ABEf300D72",
      "txHash": "0xf2f23bf1958f4f688d0d0931800b9af4cbad01b818fbbc4c9f67321775e932c6",
      "kind": "uups"
    },
    {
      "address": "0xF85895D097B2C25946BB95C4d11E2F3c035F8f0C",
      "txHash": "0x7d7145d010e7d69faf0ea5fd7ba5cdf4750e67f069c805f99f3db071be807ab1",
      "kind": "uups"
    },
    {
      "address": "0x398E4948e373Db819606A459456176D31C3B1F91",
      "txHash": "0x31b299cc044041e2ac5bf4bcb6e8e64e9b0d81349bb125ebf39ffde94cb356b6",
      "kind": "uups"
    },
    {
      "address": "0x25C0a2F0A077F537Bd11897F04946794c2f6f1Ef",
      "txHash": "0x3b1e60efec1848921e6d5f079f682555df852949eb976c64dce22ab39f6290df",
      "kind": "uups"
    },
    {
      "address": "0x6b39b761b1b64C8C095BF0e3Bb0c6a74705b4788",
      "txHash": "0xf9ac511491f66ff4136e6ca656bdb05743e287b009fe2dd8c09e9c9244258ef9",
      "kind": "uups"
    },
    {
      "address": "0x74Df809b1dfC099E8cdBc98f6a8D1F5c2C3f66f8",
      "txHash": "0xe7b86370ace9ed81383aad21e39a5811d172b027c08c5c235ddded9c724025fd",
      "kind": "uups"
    },
    {
      "address": "0x0b27a79cb9C0B38eE06Ca3d94DAA68e0Ed17F953",
      "txHash": "0x50cedb547be5d0cda24f8520a9784deae598bf0944811bb72f3a4adb90f04a94",
      "kind": "uups"
    }
  ],
  "impls": {
    "c5c2bf13ac611584b962833787473f071886b4f439f9d63efd40f8bffdc211b4": {
      "address": "0xb007167714e2940013EC3bb551584130B7497E22",
      "txHash": "0x2819d12669fe858b7801ca01fb5752f5a7670cb705cd3b590870b8d24f0e7291",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "305",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20Upgradeable)2087",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC4626Upgradeable.sol:34"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC4626Upgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC4626Upgradeable.sol:295"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "401",
            "type": "t_address",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:45"
          },
          {
            "label": "upgradeStatus",
            "offset": 20,
            "slot": "401",
            "type": "t_bool",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:46"
          },
          {
            "label": "rewardsPerShareAccumulated",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:47"
          },
          {
            "label": "userRewardPaid",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:48"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:49"
          },
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "405",
            "type": "t_contract(IERC20MetadataUpgradeable)2818",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:50"
          },
          {
            "label": "alluoPool",
            "offset": 0,
            "slot": "406",
            "type": "t_address",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:51"
          },
          {
            "label": "poolId",
            "offset": 0,
            "slot": "407",
            "type": "t_uint256",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:52"
          },
          {
            "label": "yieldTokens",
            "offset": 0,
            "slot": "408",
            "type": "t_struct(AddressSet)4943_storage",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:53"
          },
          {
            "label": "poolTokens",
            "offset": 0,
            "slot": "410",
            "type": "t_struct(AddressSet)4943_storage",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:54"
          },
          {
            "label": "curvePool",
            "offset": 0,
            "slot": "412",
            "type": "t_address",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:56"
          },
          {
            "label": "adminFee",
            "offset": 0,
            "slot": "413",
            "type": "t_uint256",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:57"
          },
          {
            "label": "gnosis",
            "offset": 0,
            "slot": "414",
            "type": "t_address",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:58"
          },
          {
            "label": "vaultRewardsBefore",
            "offset": 0,
            "slot": "415",
            "type": "t_uint256",
            "contract": "AlluoVaultUpgradeable",
            "src": "contracts\\AlluoVaultUpgradeable.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)2818": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)2087": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4943_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4628_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4628_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "07cab52f11e29933ecbac637132a3cba5b2cb00a65310d1d9d035a150858a3ca": {
      "address": "0x01cf58e264d7578D4C67022c58A24CbC4C4a304E",
      "txHash": "0x4faecf5e4f6e1be426e27c54fbac728d2c2d30b55461379be1bfe20769efd1af",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC20Upgradeable)2087",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC4626Upgradeable.sol:34"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "301",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC4626Upgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC4626Upgradeable.sol:295"
          },
          {
            "label": "rewardsPerShareAccumulated",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:34"
          },
          {
            "label": "adminFee",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:35"
          },
          {
            "label": "vaultRewardsBefore",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:36"
          },
          {
            "label": "duration",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:37"
          },
          {
            "label": "totalRequestedWithdrawals",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:38"
          },
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(IERC20MetadataUpgradeable)2818",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:40"
          },
          {
            "label": "yieldTokens",
            "offset": 0,
            "slot": "357",
            "type": "t_struct(AddressSet)4943_storage",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:41"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "359",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:45"
          },
          {
            "label": "alluoPool",
            "offset": 0,
            "slot": "360",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:46"
          },
          {
            "label": "fraxPool",
            "offset": 0,
            "slot": "361",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:47"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "362",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:48"
          },
          {
            "label": "gnosis",
            "offset": 0,
            "slot": "363",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:49"
          },
          {
            "label": "userRewardPaid",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:51"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:52"
          },
          {
            "label": "userWithdrawals",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_struct(Shareholder)5398_storage)",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:53"
          },
          {
            "label": "withdrawalqueue",
            "offset": 0,
            "slot": "367",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:55"
          },
          {
            "label": "upgradeStatus",
            "offset": 0,
            "slot": "368",
            "type": "t_bool",
            "contract": "AlluoLockedVault",
            "src": "contracts\\AlluoLockedVault.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)2818": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)2087": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Shareholder)5398_storage)": {
            "label": "mapping(address => struct AlluoLockedVault.Shareholder)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4943_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4628_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4628_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Shareholder)5398_storage": {
            "label": "struct AlluoLockedVault.Shareholder",
            "members": [
              {
                "label": "withdrawalRequested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawalAvailable",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2a61fedd27c9f810544f7f9e984f033ab9358904385566ebd7b6bddf13116410": {
      "address": "0xeC827421505972a2AE9C320302d3573B42363C26",
      "txHash": "0x6a99276e316bd471f9e4f5548f536f643ba9c8abf75413d8dc9412da9854c947",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:33"
          },
          {
            "label": "totalBalances",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:34"
          },
          {
            "label": "upgradeStatus",
            "offset": 0,
            "slot": "303",
            "type": "t_bool",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:41"
          },
          {
            "label": "rewardToken",
            "offset": 1,
            "slot": "303",
            "type": "t_contract(IERC20MetadataUpgradeable)2818",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:43"
          },
          {
            "label": "entryToken",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(IERC20MetadataUpgradeable)2818",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:44"
          },
          {
            "label": "yieldTokens",
            "offset": 0,
            "slot": "305",
            "type": "t_struct(AddressSet)4943_storage",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:45"
          },
          {
            "label": "vaults",
            "offset": 0,
            "slot": "307",
            "type": "t_struct(AddressSet)4943_storage",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:46"
          },
          {
            "label": "curvePool",
            "offset": 0,
            "slot": "309",
            "type": "t_address",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:48"
          },
          {
            "label": "poolId",
            "offset": 0,
            "slot": "310",
            "type": "t_uint256",
            "contract": "AlluoVaultPool",
            "src": "contracts\\AlluoVaultPool.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)2818": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4943_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4628_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4628_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "61c365539dad527b79c5792fd89393e1a9e14e180810f87902d376836417a499": {
      "address": "0xF85895D097B2C25946BB95C4d11E2F3c035F8f0C",
      "txHash": "0x2d73ea3b43587327027d301050e9660fde14b866b08fe50d148d520aa8afb8f5",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "upgradeStatus",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "AlluoRewardsDistributor",
            "src": "contracts\\AlluoRewardsDistributor.sol:31"
          },
          {
            "label": "rewardToken",
            "offset": 1,
            "slot": "251",
            "type": "t_address",
            "contract": "AlluoRewardsDistributor",
            "src": "contracts\\AlluoRewardsDistributor.sol:32"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(AddressSet)4943_storage",
            "contract": "AlluoRewardsDistributor",
            "src": "contracts\\AlluoRewardsDistributor.sol:33"
          },
          {
            "label": "poolToVaults",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_struct(AddressSet)4943_storage)",
            "contract": "AlluoRewardsDistributor",
            "src": "contracts\\AlluoRewardsDistributor.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressSet)4943_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4943_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4628_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4628_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
