{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x15Ff10fCc8A1a50bFbE07847A22664801eA79E0f",
      "txHash": "0xbe3b24436dec95c80aa4bc76645dcec86d2f9b74dcfdfa5bf6fc64e053b66fd3",
      "kind": "uups"
    },
    {
      "address": "0xd038A2EE73b64F30d65802Ad188F27921656f28F",
      "txHash": "0x01b2a29a0f5dca8492c453b5d60165cfd5475bb7e468c2cddbb70f386a2d6f18",
      "kind": "uups"
    }
  ],
  "impls": {
    "dadf76acc65ab03be571f393a0a464e42cd22fe1a1ed19591aefa122d7da1cd7": {
      "address": "0x01cf58e264d7578D4C67022c58A24CbC4C4a304E",
      "txHash": "0x63f8e3eab8b77b765e52197557e7a627cf668d96af740f29e7803db0725ffd5a",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "305",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IERC20Upgradeable)2160",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "351",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "userRewardPaid",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:44"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:45"
          },
          {
            "label": "userWithdrawals",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_address,t_struct(Shareholder)5537_storage)",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:46"
          },
          {
            "label": "withdrawalqueue",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:47"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "405",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:49"
          },
          {
            "label": "alluoPool",
            "offset": 0,
            "slot": "406",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:50"
          },
          {
            "label": "fraxPool",
            "offset": 0,
            "slot": "407",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:51"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "408",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:52"
          },
          {
            "label": "gnosis",
            "offset": 0,
            "slot": "409",
            "type": "t_address",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:53"
          },
          {
            "label": "rewardsPerShareAccumulated",
            "offset": 0,
            "slot": "410",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:55"
          },
          {
            "label": "adminFee",
            "offset": 0,
            "slot": "411",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:56"
          },
          {
            "label": "vaultRewardsBefore",
            "offset": 0,
            "slot": "412",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:57"
          },
          {
            "label": "duration",
            "offset": 0,
            "slot": "413",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:58"
          },
          {
            "label": "totalRequestedWithdrawals",
            "offset": 0,
            "slot": "414",
            "type": "t_uint256",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:59"
          },
          {
            "label": "upgradeStatus",
            "offset": 0,
            "slot": "415",
            "type": "t_bool",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:61"
          },
          {
            "label": "rewardToken",
            "offset": 1,
            "slot": "415",
            "type": "t_contract(IERC20MetadataUpgradeable)2890",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:62"
          },
          {
            "label": "yieldTokens",
            "offset": 0,
            "slot": "416",
            "type": "t_struct(AddressSet)5015_storage",
            "contract": "AlluoLockedVault",
            "src": "contracts/AlluoLockedVault.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20MetadataUpgradeable)2890": {
            "label": "contract IERC20MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)2160": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Shareholder)5537_storage)": {
            "label": "mapping(address => struct AlluoLockedVault.Shareholder)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)5015_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4700_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4700_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Shareholder)5537_storage": {
            "label": "struct AlluoLockedVault.Shareholder",
            "members": [
              {
                "label": "withdrawalRequested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawalAvailable",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
